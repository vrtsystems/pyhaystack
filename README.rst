pyhaystack |build-status| |coverage| |docs| |Gitter|
====================================================

What is this ?
--------------
Pyhaystack is a module that allow python programs to connect to a haystack server
using semantic data model for buildings (project-haystack_).

Browse a campus, building, floor... find VAV boxes, AHU units, etc. Then extract history
data from them and get the results ready for analysis using pandas or your own database implementation.

Which clients are implemented ?
-------------------------------
Actually, connection can be established with :

* NiagaraAX_ by Tridium
* Widesky_ by VRT_
* Skyspark_ by SkyFoundry

Connection to Niagara AX requires the nHaystack_ module by J2 Innovations

How do I install pyhaystack ?
-----------------------------
::

    pip install pyhaystack

Or you can also git clone the develop branch and use ::

    python setup.py install

How do I execute the test suite?
-----------------------------
From the `tests` directory do the following:
::

    pytest

Refer to `here <https://pip.pypa.io/en/stable/installing/>`_ for its installation guide.

What is project-haystack ?
--------------------------
As stated in the web site

  "`Project Haystack`_ is an open source initiative to streamline
  working with data from the Internet of Things. We standardize
  semantic data models and web services with the goal of making
  it easier to unlock value from the vast quantity of data being
  generated by the smart devices that permeate our homes, buildings,
  factories, and cities. Applications include automation, control,
  energy, HVAC, lighting, and other environmental systems."

  -- Project-Haystack

New implementation
--------------------------
We've been reworking everything from the early version.
Now, pyhaystack is more robust and will be ready for asynchronous development.

This new implementation has been mostly supported by VRT_ and Servisys_. We are hoping
that more people will join us in our effort to build a well working open-source software
that will open the door of building data analysis to Python users.

Dependency
--------------
Pyhaystack highly depend on hszinc_ which is a special parser for zinc encoded data.
Zinc was created for project-haystack_ as a CSV replacement.

For analysis, we also suggest using Pint_ to deal with units. It will bring a lot of possibilities
to pyhaystack (ex. unit conversion)


.. |build-status| image:: https://travis-ci.org/ChristianTremblay/pyhaystack.svg?branch=master
   :target: https://travis-ci.org/ChristianTremblay/pyhaystack
   :alt: Build status

.. |docs| image:: https://readthedocs.org/projects/pyhaystack/badge/?version=latest
   :target: http://pyhaystack.readthedocs.org/
   :alt: Documentation

.. |coverage| image:: https://coveralls.io/repos/ChristianTremblay/pyhaystack/badge.svg?branch=master&service=github
   :target: https://coveralls.io/github/ChristianTremblay/pyhaystack?branch=master
   :alt: Coverage

.. |Gitter| image:: https://badges.gitter.im/ChristianTremblay/pyhaystack.svg
  :target: https://gitter.im/ChristianTremblay/pyhaystack?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge
  :alt: Gitter

.. _Skyspark : https://www.skyfoundry.com/skyspark/

.. _NiagaraAX : https://www.tridium.com/en/products-services/niagaraax

.. _VRT : http://www.vrt.com.au/

.. _Servisys : http://www.servisys.com

.. _Widesky : http://widesky.cloud/

.. _nHaystack : https://bitbucket.org/jasondbriggs/nhaystack

.. _project-haystack : http://www.project-haystack.org

.. _Project Haystack : http://www.project-haystack.org

.. _Pint : http://pint.readthedocs.io

.. _hszinc : https://github.com/vrtsystems/hszinc
